@using Final.Models.Reports
@model MostControversialViewModel
    @{
        ViewBag.Title = "Reports";
    }
    <script src="~/Scripts/jquery.canvasjs.min.js"></script>

    <script type="text/javascript">
        window.onload = function () {
            var dataTop = @Html.Raw(Json.Encode(Model.top));
            var dataBottom = @Html.Raw(Json.Encode(Model.bot));
            var chart = new CanvasJS.Chart("chartContainer", {
                animationEnabled: true,
                title: {
                    text: "Most controversial posts"
                },
                axisX: {
                    title: "Posts"
                },
                axisY: {
                    title: "Number of comments"
                },
                data: [
                {
                    type: "stackedColumn100",
                    legendText: "Authority",
                    showInLegend: "true",
                    indexLabel: "#percent %",
                    indexLabelPlacement: "inside",
                    indexLabelFontColor: "white",
                    dataPoints: dataTop,

                },
                {
                    type: "stackedColumn100",
                    legendText: "Citizens",
                    showInLegend: "true",
                    indexLabel: "#percent %",
                    indexLabelPlacement: "inside",
                    indexLabelFontColor: "white",
                    dataPoints: dataBottom,

                }
                ]
            });
            chart.render();
        };
        function ExportToCSV(){
            var dataTop = @Html.Raw(Json.Encode(Model.top));

            ConvertToCSV(dataTop);
        }
        function ConvertToCSV(objArray) {
            var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;
            var str = '';
            var csvContent = "data:text/csv;charset=utf-8,";
            for (var i = 0; i < array.length; i++) {
                var line = '';
                for (var index in array[i]) {
                    if (line != '') line += ','

                    line += array[i][index];
                }
                csvContent += line + '\r\n';
                str += line + '\r\n';
            }
            console.log(str);
            var encodedUri = encodeURI(csvContent);
            var link = document.createElement("a");
            link.setAttribute("href", encodedUri);
            link.setAttribute("download", "MostControversialPostsReport.csv");
            document.body.appendChild(link);

            link.click();
            return str;
        }
        function ExportToJson(){
            var data = @Html.Raw(Json.Encode(Model));

            var str = JSON.stringify(data);

            var dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(str);
            var link = document.createElement("a");
            link.setAttribute("href", dataUri);
            link.setAttribute("download", "MostControversialPostsReport.txt");
            document.body.appendChild(link);

            link.click();
        }
    </script>

    <h2>Reports</h2>

    <ul class="nav nav-tabs">
        <li><a href="@Url.Action("MostFollowedReports","Reports")">Most followed posts</a></li>
        <li><a href="@Url.Action("ActivityReport","Reports")">Activity report</a></li>
        <li class="active"><a href="#">Most controversial</a></li>
    </ul>
<div style="margin:10px 0 10px 0;">
    <h4 style="display:inline-block;">Export to:</h4>
    <button class="btn btn-primary" onclick="ExportToCSV()">csv</button>
    <button class="btn btn-primary" onclick="ExportToJson()">json</button>
    <a class="btn btn-primary" href="@Url.Action("ExportToXML","Reports",new { type = "mc" })">xml</a>
</div>


    <div id="chartContainer"></div>